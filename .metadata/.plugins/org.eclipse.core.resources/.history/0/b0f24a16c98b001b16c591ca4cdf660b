package com.spring.cleanmarket.item.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.spring.cleanmarket.item.commons.SearchVO;
import com.spring.cleanmarket.item.model.ItemVO;
import com.spring.cleanmarket.item.service.IItemService;
import com.spring.cleanmarket.member.model.MemberVO;
import com.spring.cleanmarket.member.service.IMemberService;

@Controller
@RequestMapping("item")
public class ItemController {
	
	@Autowired
	private IItemService service;
	
	public ItemController() {
		System.out.println("ItemController작동");
	}
	
	//판매하기 버튼 -> 상품등록 페이지 요청
	@GetMapping("/write")
	public String ItemWrite(HttpSession session, Model model) {
		System.out.println("상품등록 페이지 요청 : /item/write -> GET");
		if(session.getAttribute("login")==null) {
			model.addAttribute("msg","loginnull");			
			return "member/login";
		}
		return "item/write";
	}
	
	//상품 등록 요청
	@PostMapping("/write")
	public String ItemWrite(Model model,String profile_pt,ItemVO item) {
		System.out.println("상품 DB 등록 요청 : /item/write -> POST");
		System.out.println(profile_pt);
		System.out.println(item.toString());
				
		service.write(item);
		model.addAttribute("item",item);
		return "item/content";
	}

	//게시글 상세조회 요청
	@GetMapping("/content")
	//@PathVariable : URL 경로에 변수를 포함시켜주는 방식
	//null이나 공백이 들어가는 파라미터 값이라면 적용하지 않는 것을 추천
	//파라미터 값에 .이 포함되어 있다면 .뒤의 값은 잘립니다
	public String content(@PathVariable("itemNo") int itemNo, Model model) {
		System.out.println("URL : /board/content -> GET");
		System.out.println("parameter : "+itemNo);

		ItemVO vo = service.selectOne(itemNo);
		System.out.println("result data: "+vo);
		model.addAttribute("item",vo);

		return "item/content";
	}

	
	//검색 처리 이후 게시글 목록 불러오기 요청
	@GetMapping("/item_list")
	public String list(SearchVO search, Model model) {		

		System.out.println("검색어 : "+search.getKeyword());

		List<ItemVO> list = service.getItemList(search);

		model.addAttribute("items",list);
		
		return "item/list";
	}


	
	
}
